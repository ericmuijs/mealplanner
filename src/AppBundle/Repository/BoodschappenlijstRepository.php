<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * BoodschappenlijstRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BoodschappenlijstRepository extends EntityRepository
{
	public function findIngredientenByBoodschappenlijst($id){
		return $this->getEntityManager()->createQueryBuilder()
				->select('partial a.{id,name}', 'i', 'partial af.{id,name}')
// 				->select('a', 'i', 'af')
				->from('AppBundle:Afdeling','a')
				->join('a.ingredienten', 'i')
				->join('i.afdeling', 'af')
				->join('i.boodschappenlijst', 'b')
				->where('b.id = :boodschappenid')
				->setParameter('boodschappenid', $id)			
				->orderBy('a.name')
				->getQuery()
				->getResult();
				
// 				->select('partial af.{id,name}', 'i')
// 				->from('AppBundle:Ingredient','i')
// 				->join('i.afdeling','af')
// 				->join('i.boodschappenlijst', 'b')
// 				->where('b.id = :boodschappenid')
// 				->setParameter('boodschappenid', $id)
// 				->getQuery()
// 				->getResult();
	}

	
	public function findReceptenByBoodschappenlijst($id){
		return $this->getEntityManager()->createQueryBuilder()
				->select('r')
				->from('AppBundle:Recept', 'r')
				->join('r.ingredienten', 'i')
				->join('i.ingrbl','ibl')
				->join('ibl.boodschappenlijst', 'b')
				->where('b.id = :boodschappenid')
				->setParameter('boodschappenid', $id)
				->groupBy('r.titel')
				->getQuery()
				->getResult();
							
	}
}
