{% extends 'base.html.twig' %}

{% block body %}
		<h3>Boodschappenlijst</h3>
		{% for afdeling in afdelingen %}
		 <h4>{{ afdeling.name }}</h4>
		 <ul class="list-unstyled ingredient-list">
		 {% for ingredient in afdeling.ingredienten %}
			<li><span class="hoeveelheid">{{ ingredient.hoeveelheid}}</span> <span class="eenheid">{{ ingredient.eenheid}}</span> <span class="ingredient">{{ ingredient.ingredient}}</span></li>
		 {% endfor %}
		 </ul>
		 {% endfor %}
{% endblock %}

{% block javascripts %}
		 <script>
		 $(document).ready(function(){
		 	alert('ready');
		 	groupDuplicateItems();
		 });
	function groupDuplicateItems(){
		$('ul.ingredient-list').each(function(){
	
			var ingr = $('li', this).map(function(){
				return $(this).find('span').filter('.hoeveelheid, .eenheid, .ingredient');
			});
		
			function findDuplicates(array){
			
				var dupl = [], counts = {}, indexes = {}, sum = {};
			
				function count(item, index, quantity){
					counts[item] = counts[item] >= 1 ? counts[item]+1 : 1;
					if(counts[item] === 2){
						dupl.push(item);
					}
					indexes[item] = counts[item] >= 2 ? indexes[item]+','+index : index;
					quantity = Number(quantity);
					sum[item] = counts[item] >= 2 ? sum[item]+quantity : quantity;
				}
			
				for(var i=0; i<array.length;i++){
					if(array[i][0].innerHTML === "" && array[i][1].innerHTML === ""){
						var item = array[i][2].innerHTML;
						count(item, i, 0);
					}
					if(array[i][0].innerHTML !== "" && array[i][1].innerHTML !== ""){
						var item = array[i][1].innerHTML + " " + array[i][2].innerHTML;
						var q = array[i][0].innerHTML;
						count(item, i, q);
					}
					if(array[i][0].innerHTML !== "" && array[i][1].innerHTML === ""){
						var item = array[i][2].innerHTML;
						var q = array[i][0].innerHTML;
						count(item, i, q);
					}
				}
// 				console.log(dupl);
// 				console.log(counts);
// 				console.log(indexes);
// 				console.log(sum);
				
				out = {};
				for(var i=0;i<dupl.length;i++){
					if(sum[dupl[i]]>0){
					out[sum[dupl[i]]+' '+dupl[i]] = indexes[dupl[i]]; 
					}
					else{
					out[dupl[i]] = indexes[dupl[i]];
					}
				}
// 				console.log(out);
			
				for (x in out){
					var temp;
					temp = out[x].split(',');
					for (a in temp){
						temp[a] = parseInt(temp[a], 10);
					}
					out[x] = temp;
				}
			
				return out;
			}
		
			var duplicates = findDuplicates(ingr);
// 			console.log(duplicates);

			for(x in duplicates){
				var lis = $('li', this).filter(function(index){
					return $.inArray(index, duplicates[x]) > -1;		
					});
				newUl = $('<ul class="new-ul collapse" id="' + x.replace(/ /g,'') + '"></ul>');
				lis.wrapAll(newUl);
				$('li', this).eq(duplicates[x][0]).parent().before('<div data-toggle="collapse" data-target="#' + x.replace(/ /g,'') + '">' + '<span class="glyphicon glyphicon-expand"></span>&nbsp;&nbsp;' + x + '</div>');

			}			
		});
	}
		 </script>
{% endblock %}